const mongoose = require('mongoose');
require('dotenv').config();

// Conectar a MongoDB
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/apr')
  .then(async () => {
    console.log('‚úÖ Conectado a MongoDB\n');

    // Cargar modelos
    const TarifaConfig = mongoose.model('TarifaConfig', new mongoose.Schema({}, { strict: false }));
    const User = mongoose.model('User', new mongoose.Schema({}, { strict: false }));

    // Buscar tarifa activa
    const tarifa = await TarifaConfig.findOne({ activa: true });
    if (!tarifa) {
      console.log('‚ùå No hay tarifa activa');
      process.exit(1);
    }

    console.log('üìã Tarifa activa:', tarifa.nombre);
    console.log('üí∞ Cargo fijo residencial:', tarifa.cargoFijo.residencial);
    console.log('üìê Escalones:', tarifa.escalones.length);

    // Datos de prueba
    const lecturaAnterior = 100;
    const lecturaActual = 125;
    const consumoM3 = lecturaActual - lecturaAnterior;

    console.log('\nüî¢ === SIMULACI√ìN DE C√ÅLCULO ===');
    console.log(`üìä Lectura anterior: ${lecturaAnterior} m¬≥`);
    console.log(`üìä Lectura actual: ${lecturaActual} m¬≥`);
    console.log(`üìä Consumo: ${consumoM3} m¬≥`);
    console.log(`üë§ Categor√≠a: residencial`);

    // Simular c√°lculo manual
    const cargoFijo = tarifa.cargoFijo.residencial;
    console.log(`\nüíµ Cargo fijo: $${cargoFijo}`);

    let costoConsumo = 0;
    let consumoRestante = consumoM3;

    console.log('\nüìê Calculando por escalones:');

    if (!tarifa.escalones || tarifa.escalones.length === 0) {
      console.log('‚ùå ERROR: No hay escalones configurados');
    } else {
      const escalonesOrdenados = tarifa.escalones.sort((a, b) => a.desde - b.desde);

      for (const escalon of escalonesOrdenados) {
        if (consumoRestante <= 0) break;

        const limiteSuperior = escalon.hasta === -1 ? Infinity : escalon.hasta;
        const consumoEnEsteEscalon = Math.min(
          consumoRestante,
          limiteSuperior - escalon.desde + 1
        );

        if (consumoEnEsteEscalon > 0) {
          const tarifaUnitaria = escalon.tarifaResidencial;
          const costoEscalon = consumoEnEsteEscalon * tarifaUnitaria;

          console.log(`\n  Escal√≥n ${escalon.desde}-${escalon.hasta === -1 ? '‚àû' : escalon.hasta} m¬≥:`);
          console.log(`    - Consumo en este escal√≥n: ${consumoEnEsteEscalon} m¬≥`);
          console.log(`    - Tarifa: $${tarifaUnitaria}/m¬≥`);
          console.log(`    - Costo: ${consumoEnEsteEscalon} √ó $${tarifaUnitaria} = $${costoEscalon}`);

          costoConsumo += costoEscalon;
          consumoRestante -= consumoEnEsteEscalon;
        }
      }
    }

    const montoTotal = cargoFijo + costoConsumo;

    console.log(`\nüìä === RESUMEN ===`);
    console.log(`üíµ Cargo fijo: $${cargoFijo}`);
    console.log(`üíß Costo consumo: $${costoConsumo}`);
    console.log(`üí∞ MONTO TOTAL: $${montoTotal}`);

    if (costoConsumo === 0) {
      console.log('\n‚ö†Ô∏è  PROBLEMA DETECTADO:');
      console.log('‚ö†Ô∏è  El costo del consumo es $0');
      console.log('‚ö†Ô∏è  Esto explica por qu√© las boletas solo muestran el cargo fijo');
      console.log('\nüîç Posibles causas:');
      console.log('   1. Los escalones tienen tarifas en $0');
      console.log('   2. El rango de los escalones no cubre el consumo');
      console.log('   3. Hay un error en la l√≥gica del c√°lculo');
    }

    mongoose.connection.close();
    process.exit(0);
  })
  .catch(err => {
    console.error('‚ùå Error:', err.message);
    process.exit(1);
  });
