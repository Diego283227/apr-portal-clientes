# Configuración de Nginx para proxy reverso en el VPS
# Este archivo debe copiarse a /etc/nginx/sites-available/portal-online
# y crear un symlink en /etc/nginx/sites-enabled/

# Límite de tamaño de carga
client_max_body_size 100M;

# Upstream para el backend
upstream backend {
    server localhost:5000;
}

# Upstream para el frontend
upstream frontend {
    server localhost:80;
}

# Redirección HTTP a HTTPS (descomentar cuando tengas SSL)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name tu-dominio.com www.tu-dominio.com;
#     return 301 https://$server_name$request_uri;
# }

# Servidor principal
server {
    listen 80;
    listen [::]:80;
    server_name tu-dominio.com www.tu-dominio.com;  # Cambia esto por tu dominio

    # Para usar HTTPS con Let's Encrypt, descomentar:
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /etc/letsencrypt/live/tu-dominio.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/tu-dominio.com/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    # Logs
    access_log /var/log/nginx/portal-online-access.log;
    error_log /var/log/nginx/portal-online-error.log;

    # API Backend
    location /api {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # WebSocket para Socket.IO
    location /socket.io {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Frontend
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
}
