name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/portal-online

            # Descargar últimos cambios
            git pull origin master

            # Crear archivo .env si no existe
            if [ ! -f .env ]; then
              echo "Creating .env file..."
              cat > .env << EOF
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
            FRONTEND_URL=http://145.223.26.119
            NODE_ENV=production
            PORT=5000
            EOF
            fi

            # Detener contenedores
            docker-compose -f docker-compose.atlas.yml down

            # Reconstruir solo si hay cambios en Dockerfiles
            if git diff HEAD@{1} --name-only | grep -q "Dockerfile\|package.json"; then
              echo "Detected changes in Dockerfile or dependencies, rebuilding..."
              docker-compose -f docker-compose.atlas.yml build --no-cache
            fi

            # Iniciar contenedores
            docker-compose -f docker-compose.atlas.yml up -d

            # Limpiar imágenes antiguas
            docker image prune -f

            # Mostrar estado
            echo "Deployment completed!"
            docker ps
